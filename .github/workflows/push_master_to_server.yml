name: Push Medstat Project To Server Workflow
on:
  push:
    branches:
      - master
jobs:
  check_style:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set-up python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Install dependies
        run: |
          python -m pip install --upgrade pip
          pip install ruff==0.6.1

      - name: Test style
        run: python -m ruff check ./src
  build_and_push_to_docker_hub:
    runs-on: ubuntu-latest
    needs: check_style  # Не выполнять сразу, ждать, пока выполнится tests
    steps:
      - name: Check out the repo
        # Получение исходного кода из репозитория
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        # Установка сборщика контейнеров Docker
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker 
        # Авторизация на Docker Hub
        uses: docker/login-action@v2
        # При помощи with передаём в action параметры username и password
        with:
          username: ${{ secrets.PASHY_DOCKER_USERNAME }}
          password: ${{ secrets.PASHY_DOCKER_PASSWORD }}
      - name: Push to DockerHub
        # Одновременный билд и пуш образа в Docker Hub
        uses: docker/build-push-action@v4
        with:
          # Параметр context указывает, что нужный Dockerfile 
          # находится в корне прокта
          context: ./src
          # Параметр push: true указывает, что образ нужно не только собрать,
          # но и отправить на Docker Hub
          push: true
          # В параметре tags задаётся название и тег для образа.
          # Для каждого пересобранного образа 
          # устанавливаем тег latest, чтобы потом
          # на сервере и в docker-compose.yml не указывать версию
          tags: pashykdf/medstat_backend:latest
  deploy:
    runs-on: ubuntu-latest
    needs: 
      # Дождёмся билда всех образов
      - build_and_push_to_docker_hub
    steps:
    - name: Checkout repo
      uses: actions/checkout@v4
    # Копируем docker-compose.production.yml на продакшен-сервер
    - name: Copy docker-compose.yml via ssh
      uses: appleboy/scp-action@master
    # Передаём параметры для action appleboy/scp-action:
      with:
        host: ${{ secrets.PASHY_HOST }}
        username: ${{ secrets.PASHY_USER }}
        key: ${{ secrets.PASHY_SSH_KEY }}
        passphrase: ${{ secrets.PASHY_SSH_PASSPHRASE }}
        source: "infra/docker-compose.production.yml"
        target: "/home/medstat"
        # Файл компоуса копируется на сервер вместе с папкой infra, 
        # в которой он находится в проекте. Для того, чтобы
        # копировался только сам файл, нужно убрать первый уровень,
        # т.е. папку infra
        strip_components: 1
    - name: Executing remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.PASHY_HOST }}
        username: ${{ secrets.PASHY_USER }}
        key: ${{ secrets.PASHY_SSH_KEY }}
        passphrase: ${{ secrets.PASHY_SSH_PASSPHRASE }}
        # Параметр script передаёт в action appleboy/ssh-action команды,
        # которые нужно выполнить на сервере, 
        # с которым установлено соединение
        script: |
          # Выполняет pull образов с Docker Hub
          docker compose -f docker-compose.production.yml pull
          # Перезапускает все контейнеры в Docker Compose
          docker compose -f docker-compose.production.yml down
          docker compose -f docker-compose.production.yml up -d
